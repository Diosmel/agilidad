<!DOCTYPE html>
<html lang="es">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>MatchMania</title>
<style>
    body {
        font-family: 'Arial', sans-serif;
        margin: 0;
        padding: 0;
        overflow: hidden;
        color: #fff;
        background: linear-gradient(to right, #283048, #859398);
    }
    #videoFondo {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        object-fit: cover;
        z-index: -1;
    }
    .container {
        position: relative;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        height: 100vh;
        z-index: 1;
    }
    h1 {
        font-size: 2.5em;
        margin-bottom: 20px;
        text-shadow: 2px 2px #000;
    }
    button {
        font-size: 1.5em;
        padding: 15px 30px;
        margin: 10px;
        cursor: pointer;
        background-color: #F67280;
        border: none;
        border-radius: 8px;
        color: white;
        box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.2);
        transition: background-color 0.3s ease;
    }
    button:hover {
        background-color: #C06C84;
    }
    #botonSonido {
        position: fixed;
        top: 10px;
        right: 10px;
        font-size: 2em;
        background: transparent;
        border: none;
        cursor: pointer;
        z-index: 2;
        color: white;
    }
    #informacion p {
        margin: 5px 0;
        font-size: 1.2em;
    }
    #menuPrincipal, #tutorial, #informacion, #juego, #resultado, #reiniciar, #siguiente, #volverMenu, #cuentaRegresiva, #iniciarPantalla, #ranking {
        display: none;
    }
    #juego {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        gap: 10px;
        width: 400px;
        margin-top: 20px;
    }
    .carta {
        background-color: #3A3A3A;
        border-radius: 8px;
        box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.2);
        text-align: center;
        font-size: 40px;
        cursor: pointer;
        display: flex;
        justify-content: center;
        align-items: center;
        transition: transform 0.5s ease, background-color 0.5s ease;
    }
    #resultado {
        font-size: 2em;
        margin-top: 20px;
    }
    #cuentaRegresiva {
        font-size: 3em;
        margin-bottom: 20px;
    }
    #iniciarPantalla {
        font-size: 2.5em;
        text-align: center;
        margin-top: 50px;
        cursor: pointer;
        font-weight: bold;
        color: #FFD700;
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
        animation: parpadeo 1s infinite;
    }
    #creditos {
        position: fixed;
        bottom: 10px;
        right: 10px;
        font-size: 0.9em;
        color: rgba(255, 255, 255, 0.6);
    }
    @keyframes parpadeo {
        0% { opacity: 1; }
        50% { opacity: 0.5; }
        100% { opacity: 1; }
    }
    .nivelTransition {
        animation: fadeIn 1s forwards;
    }
    @keyframes fadeIn {
        0% { opacity: 0; }
        100% { opacity: 1; }
    }
</style>
</head>
<body>

<!-- Video de fondo -->
<video id="videoFondo" autoplay muted loop>
    <source src="https://i.imgur.com/Q8rFKwR.mp4" type="video/mp4">
    Tu navegador no soporta la reproducción de video.
</video>

<!-- Botón de control de sonido -->
<button id="botonSonido">🔇</button>

<div class="container">
    <h1>MatchMania</h1>

    <div id="menuPrincipal">
        <button id="modo1">Iniciar Juego</button>
        <button id="tutorialBtn">Tutorial</button>
    </div>

    <div id="tutorial">
        <button id="tutorial1">¿Cómo jugar?</button>
        <button id="volverMenuTutorial">Volver al Menú Principal</button>
    </div>

    <div id="informacion">
        <p>Nivel: <span id="nivel">1</span></p>
        <p>Puntos: <span id="puntos">0</span></p>
        <p>Tiempo restante: <span id="tiempo">30</span> segundos</p>
    </div>

    <div id="cuentaRegresiva"></div>

    <div id="juego"></div>
    <p id="resultado"></p>
    <button id="reiniciar">Reiniciar</button>
    <button id="siguiente">Siguiente Nivel</button>
    <button id="volverMenu">Volver al Menú Principal</button>

    <div id="iniciarPantalla">Toca en cualquier parte de la pantalla para iniciar</div>

    <!-- Ranking de jugadores -->
    <div id="ranking">
        <h2>Ranking de jugadores</h2>
        <ul id="listaRanking"></ul>
    </div>

    <!-- Créditos -->
    <div id="creditos">Creador: Diosmel</div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    document.querySelector('#menuPrincipal').style.display = 'block';
});

// Variables para el sonido y el video
let videoFondo = document.getElementById('videoFondo');
let botonSonido = document.getElementById('botonSonido');
let sonidoActivo = false;

// Control de sonido
botonSonido.addEventListener('click', function() {
    if (!sonidoActivo) {
        videoFondo.muted = false;
        botonSonido.textContent = '🔊';
    } else {
        videoFondo.muted = true;
        botonSonido.textContent = '🔇';
    }
    sonidoActivo = !sonidoActivo;
});

// Variables del juego
let nivel = 1;
let puntos = 0;
let tiempoRestante = 30;
let tiempoInicial = 30;
let intervalo = null;
let juego = document.querySelector('#juego');
let primeraCarta = null;
let ranking = [];
const emojis = ['⚽️', '🎾', '🏀', '🏈', '⚾️', '🎱', '🥋', '🥊', '🏆', '🥇', '🎯', '🎮', '🎰', '🧩', '🎷', '🎤', '🎨', '🚨', '🛞', '🛟', '⚓️', '💎', '💸', '💵', '💰', '🦠', '🩸', '🪬', '⚔️', '💣', '🎁'];

document.querySelector('#modo1').addEventListener('click', mostrarPantallaInicio);
document.querySelector('#tutorialBtn').addEventListener('click', mostrarTutorial);
document.querySelector('#tutorial1').addEventListener('click', () => alert('Encuentra todos los pares de emojis antes de que se acabe el tiempo. Completa 10 niveles para ganar.'));
document.querySelector('#volverMenuTutorial').addEventListener('click', volverAlMenuPrincipal);
document.querySelector('#volverMenu').addEventListener('click', volverAlMenuPrincipal);
document.querySelector('#siguiente').addEventListener('click', siguienteNivel);
document.querySelector('#reiniciar').addEventListener('click', reiniciarJuego);
document.querySelector('#iniciarPantalla').addEventListener('click', iniciarModo1);

function mostrarTutorial() {
    ocultarTodo();
    document.querySelector('#tutorial').style.display = 'block';
}

function volverAlMenuPrincipal() {
    ocultarTodo();
    document.querySelector('#menuPrincipal').style.display = 'block';
}

function mostrarPantallaInicio() {
    ocultarTodo();
    document.querySelector('#iniciarPantalla').style.display = 'block';
}

function iniciarModo1() {
    ocultarTodo();
    document.querySelector('#cuentaRegresiva').style.display = 'block';
    let cuenta = 3;
        const cuentaRegresiva = setInterval(() => {
        document.querySelector('#cuentaRegresiva').textContent = cuenta;
        if (cuenta === 0) {
            clearInterval(cuentaRegresiva);
            iniciarJuego();
        }
        cuenta--;
    }, 1000);
}

function iniciarJuego() {
    document.querySelector('#cuentaRegresiva').style.display = 'none';
    document.querySelector('#informacion').style.display = 'block';
    document.querySelector('#juego').style.display = 'grid';
    document.querySelector('#volverMenu').style.display = 'inline-block';

    juego.innerHTML = '';
    juego.style.pointerEvents = 'auto';
    primeraCarta = null;

    let imagenes = [...emojis.slice(0, nivel * 2), ...emojis.slice(0, nivel * 2)];
    imagenes.sort(() => Math.random() - 0.5); // Asegura que las cartas se mezclen bien

    colocarCartas(imagenes);
    document.querySelector('#nivel').textContent = nivel;
    document.querySelector('#puntos').textContent = puntos;
    tiempoRestante = tiempoInicial - (nivel - 1) * 2; // Reducir 2 segundos por cada nivel
    document.querySelector('#tiempo').textContent = tiempoRestante;
    iniciarIntervaloTiempo();

    // Animación de transición al pasar de nivel
    if (nivel % 3 === 0) {
        document.body.classList.add('nivelTransition');
    } else {
        document.body.classList.remove('nivelTransition');
    }
}

function colocarCartas(imagenes) {
    imagenes.forEach(imagen => {
        let carta = crearCarta(imagen);
        juego.appendChild(carta);
    });
}

function crearCarta(imagen) {
    let carta = document.createElement('div');
    carta.classList.add('carta');
    carta.innerHTML = <div class="contenido">${imagen}</div>;
    carta.addEventListener('click', manejarCartaClick);
    return carta;
}

function manejarCartaClick(event) {
    let carta = event.currentTarget;
    if (primeraCarta && primeraCarta !== carta) {
        if (primeraCarta.innerHTML === carta.innerHTML) {
            primeraCarta.style.visibility = 'hidden';
            carta.style.visibility = 'hidden';
            puntos += 20; // Ganar 20 puntos por pareja correcta
            document.querySelector('#puntos').textContent = puntos;
            primeraCarta = null;
        } else {
            let cartaTemporal = primeraCarta;
            setTimeout(() => {
                if (cartaTemporal) {
                    cartaTemporal.classList.remove('revelada');
                }
                carta.classList.remove('revelada');
                primeraCarta = null;
            }, 1000);

            // Perder 10 puntos por pareja incorrecta
            puntos -= 10;
            document.querySelector('#puntos').textContent = puntos;
        }

        // Comprobar si todas las cartas han sido descubiertas
        if ([...document.querySelectorAll('.carta')].every(carta => carta.style.visibility === 'hidden')) {
            clearInterval(intervalo);
            if (nivel < 10) {
                mostrarEmojiGanador();
                document.querySelector('#siguiente').style.display = 'inline-block';
            } else {
                mostrarMensajeGanador();
                document.querySelector('#reiniciar').style.display = 'inline-block';
                guardarRanking();
            }
        }
    } else {
        carta.classList.add('revelada');
        primeraCarta = carta;
    }
}

function iniciarIntervaloTiempo() {
    intervalo = setInterval(() => {
        tiempoRestante--;
        document.querySelector('#tiempo').textContent = tiempoRestante;

        if (tiempoRestante <= 0) {
            clearInterval(intervalo);
            mostrarMensajePerdedor();
            document.querySelector('#reiniciar').style.display = 'inline-block';
            juego.style.pointerEvents = 'none';
        }
    }, 1000);
}

function mostrarEmojiGanador() {
    let emoji = document.createElement('div');
    emoji.innerHTML = '💯';
    emoji.style.fontSize = '4em';
    emoji.style.textAlign = 'center';
    document.body.appendChild(emoji);
    setTimeout(() => emoji.remove(), 1500);
}

function mostrarMensajePerdedor() {
    let mensaje;
    if (puntos >= 160) {
        mensaje = ¡Perdiste! Estuviste muy cerca del último nivel con ${puntos} puntos. ¡Sigue así!;
    } else if (puntos >= 80) {
        mensaje = ¡Perdiste! Lograste un buen desempeño con ${puntos} puntos. ¡Con un poco más de práctica lo lograrás!;
    } else {
        mensaje = ¡Perdiste! Solo acumulaste ${puntos} puntos. ¡No te desanimes, sigue intentando!;
    }
    document.querySelector('#resultado').textContent = mensaje;
    document.querySelector('#resultado').style.display = 'block';
}

function mostrarMensajeGanador() {
    document.querySelector('#resultado').textContent = ¡Felicidades! Has completado los 10 niveles con ${puntos} puntos.;
    document.querySelector('#resultado').style.display = 'block';
}

function siguienteNivel() {
    nivel++;
    document.querySelector('#siguiente').style.display = 'none';
    iniciarJuego();
}

function reiniciarJuego() {
    nivel = 1;
    puntos = 0;
    tiempoRestante = tiempoInicial;
    document.querySelector('#reiniciar').style.display = 'none';
    document.querySelector('#resultado').style.display = 'none';
    iniciarModo1();
}

function guardarRanking() {
    // Almacenar los resultados del jugador en el ranking cronológicamente
    const jugador = { nivel: nivel, puntos: puntos, fecha: new Date() };
    ranking.push(jugador);
    actualizarRanking();
}

function actualizarRanking() {
    const listaRanking = document.querySelector('#listaRanking');
    listaRanking.innerHTML = '';
    ranking.forEach((jugador, index) => {
        const li = document.createElement('li');
        li.textContent = Jugador ${index + 1} - Nivel: ${jugador.nivel}, Puntos: ${jugador.puntos}, Fecha: ${jugador.fecha.toLocaleString()};
        listaRanking.appendChild(li);
    });
    document.querySelector('#ranking').style.display = 'block';
}

function ocultarTodo() {
    document.querySelectorAll('#menuPrincipal, #tutorial, #informacion, #juego, #resultado, #reiniciar, #siguiente, #volverMenu, #cuentaRegresiva, #iniciarPantalla').forEach(el => el.style.display = 'none');
}

</script>

</body>
</html>
